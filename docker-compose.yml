# This file contains all of the services for an edX installation. See https://docs.docker.com/compose/compose-file/
# for the appropriate syntax and definitions.
#
# Housekeeping Rules:
# - Group third-party services, edX services, and edX microfrontends separately
# - Alphabetize services in the groups
# - Alphabetize individual configuration options for each service
# - Every service's container name should be prefixed with "edx.devstack." to avoid conflicts with other containers
#   that might be running for the same service.

version: "2.1"

services:

  # ================================================
  # Third-party services
  # ================================================

  apros_nginx:
    build:
      dockerfile: Dockerfile-nginx
      context: ../mcka_apros
    image: edxyonkers/apros_nginx:juniper
    container_name: edx.devstack.apros_nginx
    hostname: apros_nginx.devstack.edx
    networks:
      default:
        aliases:
          - edx.devstack.apros_nginx
    ports:
      - "80:80"
    depends_on:
      - mcka_apros
    volumes:
      - mcka_apros_assets:/edx/app/apros/mcka_apros/static_cache

  chrome:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.chrome"
    hostname: chrome.devstack.edx
    image: edxops/chrome:${OPENEDX_RELEASE:-latest}
    shm_size: 2g
    networks:
      default:
        aliases:
          - edx.devstack.chrome
    ports:
      - "15900:5900"
    volumes:  # for file uploads
      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  devpi:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.devpi"
    hostname: devpi.devstack.edx
    image: edxops/devpi:${OPENEDX_RELEASE:-latest}
    networks:
      default:
        aliases:
          - edx.devstack.devpi
    ports:
      - "3141:3141"
    volumes:
      - devpi_data:/data

  elasticsearch:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.elasticsearch"
    hostname: elasticsearch.devstack.edx
    image: edxyonkers/elasticsearch:juniper
    networks:
      default:
        aliases:
          - edx.devstack.elasticsearch
    # TODO: What to do about these forwarded ports? They'll conflict with ports forwarded by the Vagrant VM.
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_data:/usr/share/elasticsearch/logs

  # This is meant to be used to test ES upgrades so that we do not have to upgrade all of our services to ES5 at once.
  elasticsearch-5:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.elasticsearch-5"
    hostname: elasticsearch-5.devstack.edx
    image: elasticsearch:5.6.16
    networks:
      default:
        aliases:
          - edx.devstack.elasticsearch-5

  firefox:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.firefox"
    hostname: firefox.devstack.edx
    image: edxops/firefox:${OPENEDX_RELEASE:-latest}
    shm_size: 2g
    networks:
      default:
        aliases:
          - edx.devstack.firefox
    ports:
      - "25900:5900"
    volumes:  # for file uploads
      - ../edx-e2e-tests/upload_files:/edx/app/e2e/edx-e2e-tests/upload_files
      - ../edx-platform/common/test/data:/edx/app/edxapp/edx-platform/common/test/data

  mcka_apros:
    build:
      dockerfile: Dockerfile
      context: ../mcka_apros
    image: edxyonkers/mcka_apros:juniper
    container_name: apros.devstack.lms
    hostname: apros.devstack.edx
    command: bash -c "source /edx/app/apros/venvs/mcka_apros/bin/activate && while true; do python manage.py rundev 3000 ; sleep 2; done"
    networks:
      default:
        aliases:
          - apros.devstack.lms
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    volumes:
      - mcka_apros_assets:/edx/app/apros/mcka_apros/static_cache

  memcached:
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.memcached"
    hostname: memcached.devstack.edx
    image: memcached:1.5.10-alpine
    networks:
      default:
        aliases:
          - edx.devstack.memcached
    # ports:
    #   - "11211:11211"

  mongo:
    # We use WiredTiger in all environments. In development environments we use small files
    # to conserve disk space, and disable the journal for a minor performance gain.
    # See https://docs.mongodb.com/v3.0/reference/program/mongod/#options for complete details.
    command: mongod --smallfiles --nojournal --storageEngine wiredTiger
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.mongo"
    hostname: mongo.devstack.edx
    image: mongo:${MONGO_VERSION:-3.6.17}
    networks:
      default:
        aliases:
          - edx.devstack.mongo
    # ports:
    #  - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mysql:
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.mysql"
    hostname: mysql.devstack.edx
    environment:
      MYSQL_ROOT_PASSWORD: ""
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    image: mysql:5.6
    networks:
      default:
        aliases:
          - edx.devstack.mysql
    # ports:
    #    - "3506:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  lms:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py lms runserver 0.0.0.0:18000 --settings devstack_docker; sleep 2; done'
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.lms"
    hostname: lms.devstack.edx
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
      - forum
      - firefox
      - chrome
    # Allows attachment to the LMS service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.lms
      BOK_CHOY_LMS_PORT: 18003
      BOK_CHOY_CMS_PORT: 18031
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    image: edxyonkers/edxapp:juniper
    networks:
      default:
        aliases:
          - edx.devstack.lms
    ports:
      - "18000:18000"
      - "19876:19876" # JS test debugging
      # - "18003:18003"
      # - "18031:18031"
    volumes:
      - edxapp_lms_assets:/edx/var/edxapp/staticfiles/

  studio:
    command: bash -c 'source /edx/app/edxapp/edxapp_env && while true; do python /edx/app/edxapp/edx-platform/manage.py cms runserver 0.0.0.0:18010 --settings devstack_docker; sleep 2; done'
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.studio"
    hostname: studio.devstack.edx
    depends_on:
      - devpi
      - mysql
      - memcached
      - mongo
      - firefox
      - chrome
      - lms
    # Allows attachment to the Studio service using 'docker attach <containerID>'.
    stdin_open: true
    tty: true
    environment:
      BOK_CHOY_HOSTNAME: edx.devstack.studio
      BOK_CHOY_LMS_PORT: 18103
      BOK_CHOY_CMS_PORT: 18131
      EDXAPP_TEST_MONGO_HOST: edx.devstack.mongo
      NO_PYTHON_UNINSTALL: 1
      DJANGO_WATCHMAN_TIMEOUT: 30
    image: edxyonkers/edxapp:juniper
    networks:
      default:
        aliases:
          - edx.devstack.studio
    ports:
      - "18010:18010"
      - "19877:19877" # JS test debugging
      # - "18103:18103"
      # - "18131:18131"
    volumes:
      - edxapp_studio_assets:/edx/var/edxapp/staticfiles/

  forum:
    command: bash -c 'source /edx/app/forum/devstack_forum_env && cd /edx/app/forum/cs_comments_service && bundle install && while true; do ruby app.rb -o 0.0.0.0 ; sleep 2; done'
    container_name: "edx.${COMPOSE_PROJECT_NAME:-devstack}.forum"
    hostname: forum.devstack.edx
    depends_on:
      - mongo
      - memcached
      - elasticsearch
    image: edxyonkers/forum:juniper
    networks:
      default:
        aliases:
          - edx.devstack.forum
    ports:
      - "44567:4567"

volumes:
  edxapp_lms_assets:
  edxapp_studio_assets:
  elasticsearch_data:
  mongo_data:
  mysql_data:
  devpi_data:
  mcka_apros_assets:
